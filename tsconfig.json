{
  "compilerOptions": {
    //    "incremental": true
    /* 开启增量编译：TS 编译器在第一次编译的时候，会生成一个存储编译信息的文件，下一次编译的时候，会根据这个文件进行增量的编译，以此提高 TS 的编译速度 */
    /* 指定存储增量编译信息的文件位置 */
    //    "tsBuildInfoFile": "./",
    // "removeComments": true,// 输出的时候移除注释
    "target": "esnext",
    "module": "esnext",
    "importHelpers": true,
    "jsx": "react-jsx",
    "esModuleInterop": true,
    "resolveJsonModule": true,
    "noImplicitThis": false,
    "diagnostics": false,
    // 打印诊断信息
    //    "lib": [
    //      "es2015",
    //      "es2016",
    //      "es2017",
    //      "esnext",
    //      "dom"
    //    ],
    "noImplicitReturns": true,
    "suppressImplicitAnyIndexErrors": true,
    /* 有未使用到的本地变量时报错 */
    "noUnusedLocals": false,
    /* 有未使用到的函数参数时报错 */
    "noUnusedParameters": true,
    /* 严格校验 switch-case 语法 */
    "noFallthroughCasesInSwitch": true,
    // "emitDeclarationOnly": true,
    "allowJs": false,
    "experimentalDecorators": true,
    "noEmit": false,
    "strict": true,
    // 不生成编译文件
    /* 类的实例属性必须初始化 */
    // "strictPropertyInitialization": true,
    // "strictNullChecks": true,
    /**************模块解析配置**************/
    /**************模块解析配置**************/
    /**************模块解析配置**************/
    "moduleResolution": "node",
    "baseUrl": "./",
    "rootDirs": ["./"],
    // rootDir用来指定编译文件的根目录，编译器会在根目录查找入口文件
    "typeRoots": ["types", "node_modules/@types"],
    // 用来指定声明文件或文件夹的路径列表，如果指定了此项，则只有在这里列出的声明文件才会被加载
    /* 允许 export = xxx 导出 ，并使用 import xxx form "module-name" 导入*/
    // "esModuleInterop": true,
    /* 当模块没有默认导出的时候，允许被别的模块默认导入，这个在代码执行的时候没有作用，只是在类型检查的时候生效 */
    "allowSyntheticDefaultImports": true,
    /* 不要 symlinks 解析的真正路径 */
    // "preserveSymlinks": true,
    /* 允许在模块中以全局变量的方式访问 UMD 模块内容 */
    // "allowUmdGlobalAccess": true,
    /************** Source Map 配置**************/
    /************** Source Map 配置**************/
    /************** Source Map 配置**************/
    /* 指定 ts 文件位置 */
    // "sourceRoot": "",

    /* 指定 map 文件存放的位置 */
    // "mapRoot": "",

    /* 生成目标文件的 sourceMap */
    "sourceMap": true,
    // "declaration": true,

    /* 将代码与sourcemaps生成到一个文件中，要求同时设置了--inlineSourceMap 或--sourceMap 属性*/
    // "inlineSources": true,

    /* 生成目标文件的 inline sourceMap —— 源文件和 sourcemap 文件在同一文件中，而不是把 map 文件放在一个单独的文件里*/
    // "inlineSourceMap": true,

    /* 生成声明文件的 sourceMap */
    // "declarationMap": true,
    /**************高级配置**************/
    /**************高级配置**************/
    /**************高级配置**************/

    /* 强制区分大小写 */
    "forceConsistentCasingInFileNames": true,
    "paths": {
      "@/*": ["src/*"],
      "*": ["./types/*"]
    }
  },
  "include": ["src/**/*", "src/**/*.tsx", "src/**/*.ts", "types"],
  "exclude": ["build", "node_modules", "dist", "public"],
  "types": ["node"]
}
